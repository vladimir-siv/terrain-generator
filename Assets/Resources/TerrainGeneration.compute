#pragma kernel main

RWStructuredBuffer<float> _values;

float _step;
float _scale;
float _min;
float _max;
float _initial;
bool _random;

float random1f(uint seed)
{
	seed ^= 2747636419u;
	seed *= 2654435769u;
	seed ^= seed >> 16;
	seed *= 2654435769u;
	seed ^= seed >> 16;
	seed *= 2654435769u;
	return float(seed) / 4294967295.0; // 2^32-1
}

[numthreads(1, 1, 1)]
void main(uint3 id: SV_DispatchThreadID)
{
	uint size1 = (uint)ceil(_scale / _step) + 1;
	uint size2 = size1 * size1;
	uint size3 = size2 * size1;

	float _random_val = random1f(size3 * id.x + size1 * id.y + size2 * id.z);
	_random_val = (_max - _min) * _random_val + _min;

	_values[id.x + id.y * size1 + id.z * size2] = _random * _random_val + (1.0 - _random) * _initial;
}
