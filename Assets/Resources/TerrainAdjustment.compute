#pragma kernel main

RWStructuredBuffer<float> _values;

float _step;
float _scale;
float _min;
float _max;

float3 _center;
float _radius;
float _delta;

uint coord_to_index(float v) { return (uint)(v / _step); }
float index_to_coord(uint i) { return i * _step; }

[numthreads(1, 1, 1)]
void main(uint3 id: SV_DispatchThreadID)
{
	uint size1 = (uint)ceil(_scale / _step);
	uint size2 = size1 * size1;
	uint size3 = size2 * size1;

	uint i = id.x;
	uint j = id.y;
	uint k = id.z;

	float3 coord = float3(index_to_coord(i), index_to_coord(j), index_to_coord(k));

	float factor = floor(1.0f - saturate(distance(coord, _center) - _radius));

	uint index = i + j * size1 + k * size2;
	_values[index] += factor * _delta;
	_values[index] = max(_values[index], _min);
	_values[index] = min(_values[index], _max);
}
